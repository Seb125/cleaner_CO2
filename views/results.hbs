<body
  class="bg-cover bg-no-repeat bg-bottom background-image flex flex-col items-center scale-50"
>

  <!-- TODO: move control to hbs partials, move script to separate script file. -->

  <div class="h-full container mx-auto px-4">

    <div class="h-full text-white font-bold flex flex-col items-center pt-12">

      <div class="flex flex-col justify-center items-center">
        <h1 class="text-4xl mb-5 text-center">Forecast for {{data.currentDate}}</h1>
        <h1 class="text-4xl mb-5 text-center">Your region is:
          {{data.region}}</h1>
        <p class="w-3/5 md:w-1/2 text-center">{{data.forecastResult}}</p>
      </div>
        <div class="mt-5 w-8/12 mx-auto">
          <canvas id="forecastChart"  ></canvas>
        </div>

      <div id="subscribeControls" class="text-center mt-8 h-2/5 mb-10">
        <p class="m-3">You can leave your Email or WhatsApp below to subscribe
          to our daily recommendations</p>
        <form
          method="POST"
          action=""
          id="emailSubscriptionForm"
          class="px-5 flex flex-col md:flex-row md:justify-center"
        >
          <div id="emailField">
            <input
              name="email"
              id="emailInput"
              class="mx-3 bg-transparent border-2 border-white text-white font-bold rounded-lg text-lg px-6 py-3 hover:bg-white hover:text-gray-800 transition-colors duration-300"
              placeholder="Enter your email"
            />
          </div>
          <input
            name="region"
            type="text"
            class="hidden"
            id="regionInput"
            value="{{data.region}}"
          />
          <div>
            <button
              type="submit"
              class="bg-black text-white font-bold rounded-lg text-lg px-6 py-3 hover:bg-gray-800 transition-colors duration-300 mt-5 md:mt-0"
            >Submit</button>
          </div>
        </form>
        <form
          method="POST"
          action=""
          id="whatsAppSubscriptionForm"
          class="px-5 flex flex-col md:flex-row md:justify-center"
        >
          <div id="phoneField">
            <input
              name="phone"
              id="phoneInput"
              class="mx-3 bg-transparent border-2 border-white text-white font-bold rounded-lg text-lg px-6 py-3 hover:bg-white hover:text-gray-800 transition-colors duration-300"
              placeholder="+49 ..."
            />
          </div>
          <input
            name="region"
            type="text"
            class="hidden"
            id="regionInput"
            value="{{data.region}}"
          />
          <div>
            <button
              type="submit"
              class="bg-black text-white font-bold rounded-lg text-lg px-6 py-3 hover:bg-gray-800 transition-colors duration-300 mt-5 md:mt-0"
            >Submit</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  <div style="height: 800px;">

  </div>
  
  <script src="/js/subscription.js"></script>
  <script type="module">
    import { initializeChart } from "/js/chart.js"

    const timeFrameData = JSON.parse(`{{{data.time_frames}}}`);
    const windEnergyData = JSON.parse(`{{{data.wind_energy_numbers}}}`);

    
    const canvas = document.getElementById('forecastChart');
    const ctx = canvas.getContext('2d');

    if (timeFrameData.length === 0) {
      // Display "No Data Available" directly on the canvas
        const noDataMessage = "Apologies, currently there is no Data Available";

        canvas.width = 800;
        canvas.height = 200; 

           
        // Set font and alignment
        ctx.font = "20px Arial";
        ctx.fillStyle = "rgba(84, 176, 226, 50)"; // Text color
        ctx.textAlign = "left";
        ctx.textBaseline = "middle";

        // Draw text in the center of the canvas
        ctx.fillText(noDataMessage, canvas.width/4, 80 );

    } else {

      const chartData = {labels: Array.from({ length: 24 }, (_, i) => i + ":00"), vals: windEnergyData, time_frames: timeFrameData}
      console.log(timeFrameData)
      initializeChart(chartData)

    }
    // Accessing HBS data

    

  </script>

</body>